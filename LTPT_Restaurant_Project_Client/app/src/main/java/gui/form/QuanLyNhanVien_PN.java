/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.form;

import dao.LoaiNhanVien_DAO;
import dao.NhanVien_DAO;
import model.NhanVien;
import gui.swing.table.TableCustom;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tamthanh
 */
public class QuanLyNhanVien_PN extends javax.swing.JPanel {

    private NhanVien_DAO dao_nv = new NhanVien_DAO();
    private LoaiNhanVien_DAO loaiNV_dao = new LoaiNhanVien_DAO();
    private DefaultTableModel tbm;

    /**
     * Creates new form QuanLyNhanVien
     */
    public QuanLyNhanVien_PN() {
        initComponents();
        customTable();
        cbbtt.addItem("Tất cả");
        cbbtt.addItem("Đang làm");
        cbbtt.addItem("Đã nghỉ");
    }

    private void customTable() {
        TableCustom.apply(jScrollPane1, TableCustom.TableType.MULTI_LINE);
        table.getTableHeader().setFont(new Font("Sanserif", Font.BOLD, 12));
        table.getTableHeader().setBackground(new Color(50, 50, 50));
        table.repaint();
        tbm = new DefaultTableModel(new String[]{"STT","Mã NV", "Tên NV", "CCCD", "Số điện thoại", "Trạng thái", "Loại Nhân Viên", "Ngày sinh", "Giới tính", "Email", "Tuỳ chọn"}, 0);
        table.setModel(tbm);
        
        ImageIcon icon = new ImageIcon(getClass().getResource("/gui/icon/edit.png"));
        table.getColumnModel().getColumn(10).setCellRenderer(new DefaultTableCellRenderer() {
            @Override
            public void setValue(Object value) {
                if (value instanceof JLabel) {
                    JLabel lbl = (JLabel) value;
                    setIcon(lbl.getIcon());  // Thiết lập icon từ JLabel
                    setText("");  // Bỏ text để chỉ hiển thị icon
                } else {
                    super.setValue(value);  // Nếu không phải JLabel, hiển thị bình thường
                }
            }

            @Override
            public java.awt.Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel cell = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                cell.setHorizontalAlignment(JLabel.CENTER);  // Căn giữa icon trong cột
                return cell;
            }
        });
        duyetListVaoTable();
        duyetLoaiNVVaoComboxBox();
    }
    //

    public void duyetListVaoTable() {

        ArrayList<NhanVien> list = dao_nv.getList();
        ImageIcon icon = new ImageIcon(getClass().getResource("/gui/icon/edit.png"));
        JLabel lblIcon = new JLabel(icon);
        int i = 1;
        for (NhanVien e : list) {
            Object[] ob = {i++, e.getMaNV(), e.getHoTenNV(), e.getCCCD(), e.getSoDienThoai(), e.isTrangThai() ? "Đang làm" : "Đã nghỉ", e.getLoaiNhanVien().getViTri(), e.getNgaySinh(), e.isGioiTinh() ? "Nữ" : "Nam", e.getEmail(), lblIcon};
            tbm.addRow(ob);
        }
    }

    //
    public void duyetLoaiNVVaoComboxBox() {
        ArrayList<LoaiNhanVien> list = loaiNV_dao.getListLoai();
        for (LoaiNhanVien nv : list) {
            int flag = -1;
            String loai = nv.getViTri();
            for (int i = 0; i < cbbnv.getItemCount(); i++) {
                if (loai.equals(cbbnv.getItemAt(i))) {
                    flag = 1;
                }
            }
            if (flag == -1) {
                cbbnv.addItem(loai);
            }
            flag = 1;
        }
    }

    //
    public JTable getTable() {
        return table;
    }

    public DefaultTableModel getTableModel() {
        return tbm;
    }

    //
    public void refreshTable() {
        tbm.setRowCount(0);
        ArrayList<NhanVien> list = dao_nv.getList();
        ImageIcon icon = new ImageIcon(getClass().getResource("/gui/icon/edit.png"));
        JLabel lblIcon = new JLabel(icon);
        int i = 1;
        for (NhanVien e : list) {
            Object[] ob = {i++, e.getMaNV(), e.getHoTenNV(), e.getCCCD(), e.getSoDienThoai(), e.isTrangThai() ? "Đang làm" : "Đã nghỉ", e.getLoaiNhanVien().getViTri(), e.getNgaySinh(), e.isGioiTinh() ? "Nữ" : "Nam", e.getEmail(), lblIcon};
            tbm.addRow(ob);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tsdt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tten = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        them = new gui.component.Button();
        button2 = new gui.component.Button();
        button1 = new gui.component.Button();
        jLabel3 = new javax.swing.JLabel();
        cbbnv = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbbtt = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh Mục Nhân Viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 2, 24))); // NOI18N

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel1.setText("Nhập Số Điện Thoại :");

        tsdt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tsdtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tsdtKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel2.setText("Nhập Tên Nhân Viên :");

        tten.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ttenKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ttenKeyReleased(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tuỳ Chọn Chức Năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 2, 16))); // NOI18N

        them.setBackground(new java.awt.Color(50, 50, 50));
        them.setForeground(new java.awt.Color(255, 255, 255));
        them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/icon/icons8-add-32.png"))); // NOI18N
        them.setText("Thêm");
        them.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themActionPerformed(evt);
            }
        });

        button2.setBackground(new java.awt.Color(50, 50, 50));
        button2.setForeground(new java.awt.Color(255, 255, 255));
        button2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/icon/icons8-search-32.png"))); // NOI18N
        button2.setText("Tìm");
        button2.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        button1.setBackground(new java.awt.Color(50, 50, 50));
        button1.setForeground(new java.awt.Color(255, 255, 255));
        button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/icon/icons8-refresh-32.png"))); // NOI18N
        button1.setText("Làm mới");
        button1.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(them, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(them, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel3.setText("Lọc Loại Nhân Viên ");

        cbbnv.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        cbbnv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        cbbnv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbnvActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel4.setText("Lọc trạng thái Nhân Viên");

        cbbtt.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        cbbtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbttActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(125, 125, 125))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbbnv, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbbtt, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(93, 93, 93)))
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(tsdt)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(tten)))
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tsdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(tten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbnv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbtt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themActionPerformed
        ThemNhanVien_Form form = new ThemNhanVien_Form(this);
        form.setVisible(true);
    }//GEN-LAST:event_themActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        // TODO add your handling code here:
        String sdt = tsdt.getText();
        String tenNV = tten.getText();

        if (!sdt.isEmpty()) {
            tbm.setRowCount(0);
            ArrayList<NhanVien> list = dao_nv.TimTheoSDT(sdt);
            if (list != null && !list.isEmpty()) { // Kiểm tra danh sách hợp lệ
                for (NhanVien e : list) {
                    if (e != null) {
                        int i = 1;
                        LoaiNhanVien lnv = loaiNV_dao.TimLoaiNhanVien(e.getLoaiNhanVien().getMaLoaiNV());
                        Object[] ob = {i++, e.getMaNV(), e.getHoTenNV(), e.getCCCD(), e.getSoDienThoai(), e.isTrangThai() ? "Đang làm" : "Đã nghỉ", lnv.getViTri(), e.getNgaySinh(), e.getNgaySinh(), e.isGioiTinh() ? "Nữ" : "Nam", e.getEmail()};
                        tbm.addRow(ob);

                    }
                }
            } else {
                tbm.setRowCount(0);
                duyetListVaoTable();
                JOptionPane.showMessageDialog(this, "Không tìm thấy Nhân Viên", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        } else if (!tenNV.isEmpty()) {
            tbm.setRowCount(0);
            ArrayList<NhanVien> list = dao_nv.TimTheoTenNV(tenNV);
            if (list != null && !list.isEmpty()) { // Kiểm tra danh sách hợp lệ
                for (NhanVien e : list) {
                    if (e != null) {
                        int i = 1;
                        LoaiNhanVien lnv = loaiNV_dao.TimLoaiNhanVien(e.getLoaiNhanVien().getMaLoaiNV());
                        Object[] ob = {i++, e.getMaNV(), e.getHoTenNV(), e.getCCCD(), e.getSoDienThoai(), e.isTrangThai() ? "Đang làm" : "Đã nghỉ", lnv.getViTri(), e.getNgaySinh(), e.isGioiTinh() ? "Nữ" : "Nam", e.getEmail()};
                        tbm.addRow(ob);

                    }
                }
            } else {
                tbm.setRowCount(0);
                duyetListVaoTable();
                JOptionPane.showMessageDialog(this, "Không tìm thấy Nhân Viên", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số điện thoại hoặc tên nhân viên cần tìm", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }

        if (sdt.isEmpty() && tenNV.isEmpty()) {
            duyetListVaoTable();
        }
    }//GEN-LAST:event_button2ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        tsdt.setText("");
        tten.setText("");
        tsdt.setEnabled(true);
        tten.setEnabled(true);
        tsdt.requestFocus();
        tbm.setRowCount(0);
        duyetListVaoTable();
        cbbnv.setSelectedItem("Tất cả");
        cbbtt.setSelectedItem("Tất cả");
    }//GEN-LAST:event_button1ActionPerformed

    private void cbbnvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbnvActionPerformed
        // TODO add your handling code here:
        String tenLoaiNV = (String) cbbnv.getSelectedItem();
        tbm.setRowCount(0); // Xóa dữ liệu cũ trong bảng

        // Kiểm tra nếu người dùng chọn "Tất cả"
        if ("Tất cả".equals(tenLoaiNV)) {
            duyetListVaoTable();
        } else {

            String maLoaiNVDuocChon = null;
            for (LoaiNhanVien loaiNhanVien : loaiNV_dao.getListLoai()) {
                if (loaiNhanVien.getViTri().equals(tenLoaiNV)) {
                    maLoaiNVDuocChon = loaiNhanVien.getMaLoaiNV();
                    break;
                }
            }

            if (maLoaiNVDuocChon == null) {
                JOptionPane.showMessageDialog(null, "Không tìm thấy loại Nhân Viên!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            ArrayList<NhanVien> danhSachNVTheoLoai = dao_nv.getListNVTheoLoai(maLoaiNVDuocChon);
            int i = 1;
            for (NhanVien e : danhSachNVTheoLoai) {
                LoaiNhanVien lnv = loaiNV_dao.TimLoaiNhanVien(e.getLoaiNhanVien().getMaLoaiNV());
                // Tạo dữ liệu hàng cho bảng
                Object[] ob = {i++, e.getMaNV(), e.getHoTenNV(), e.getCCCD(), e.getSoDienThoai(), e.isTrangThai() ? "Đang làm" : "Đã nghỉ", lnv.getViTri(), e.getNgaySinh(), e.isGioiTinh() ? "Nữ" : "Nam", e.getEmail()};

                // Thêm hàng vào model của bảng
                tbm.addRow(ob);
            }
        }
    }//GEN-LAST:event_cbbnvActionPerformed

    private void tsdtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tsdtKeyReleased
        // TODO add your handling code here:
        tten.setEnabled(tsdt.getText().isEmpty());
    }//GEN-LAST:event_tsdtKeyReleased

    private void ttenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ttenKeyReleased
        // TODO add your handling code here:
        tsdt.setEnabled(tten.getText().isEmpty());
    }//GEN-LAST:event_ttenKeyReleased

    private void tsdtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tsdtKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            button2ActionPerformed(null);  // Gọi hàm xử lý cho button2
        }
    }//GEN-LAST:event_tsdtKeyPressed

    private void ttenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ttenKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            button2ActionPerformed(null);  // Gọi hàm xử lý cho button2
        }
    }//GEN-LAST:event_ttenKeyPressed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int clickedRow = table.getSelectedRow();
        String makh = String.valueOf(table.getValueAt(clickedRow, 1));
        ThongTinNhanVien_Form form = new ThongTinNhanVien_Form(makh, this);
        form.setVisible(true);
    }//GEN-LAST:event_tableMouseClicked

    private void cbbttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbttActionPerformed
        // TODO add your handling code here:
        // Lấy giá trị được chọn trong combobox
        String selectedItem = (String) cbbtt.getSelectedItem();
        tbm.setRowCount(0);  // Xóa tất cả các hàng trong bảng trước khi thêm dữ liệu mới

        if ("Tất cả".equals(selectedItem)) {
            duyetListVaoTable(); // Hiển thị tất cả khách hàng
        } else {
            String trangThai = null;
            if ("Đang làm".equals(selectedItem)) {
                trangThai = "1"; // Trạng thái đã đặt
            } else if ("Đã nghỉ".equals(selectedItem)) {
                trangThai = "0"; // Trạng thái đã nghỉ
            }

            if (trangThai != null) {
                // Gọi phương thức lọc danh sách khách hàng theo trạng thái
                ArrayList<NhanVien> filteredList = dao_nv.getListNVTheoTrangThai(trangThai);
                int i = 1;
                for (NhanVien e : filteredList) {
                    LoaiNhanVien lnv = loaiNV_dao.TimLoaiNhanVien(e.getLoaiNhanVien().getMaLoaiNV());
                    Object[] ob = {i++, e.getMaNV(), e.getHoTenNV(), e.getCCCD(), e.getSoDienThoai(), e.isTrangThai() ? "Đang làm" : "Đã nghỉ", lnv.getViTri(), e.getNgaySinh(), e.isGioiTinh() ? "Nữ" : "Nam", e.getEmail()};
                    tbm.addRow(ob);  // Thêm hàng vào bảng
                }
            }
        }
    }//GEN-LAST:event_cbbttActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.component.Button button1;
    private gui.component.Button button2;
    private javax.swing.JComboBox<String> cbbnv;
    private javax.swing.JComboBox<String> cbbtt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private gui.component.Button them;
    private javax.swing.JTextField tsdt;
    private javax.swing.JTextField tten;
    // End of variables declaration//GEN-END:variables
}
