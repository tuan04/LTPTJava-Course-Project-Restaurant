/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.component;


import model.Ban;
import model.DonDatBan;
import model.LoaiBan;
import model.NhanVien;
import gui.form.CapNhatDonDatBan_Form;
import gui.form.CapNhatDonDatBan_PN;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.InputStream;
import java.rmi.RemoteException;
import java.text.NumberFormat;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import rmi.RMIClientManager;
import service.BanService;
import service.LoaiBanService;
import service.NhanVienService;


/**
 *
 * @author THANHTRI
 */
public class ItemDonDatBan extends javax.swing.JPanel {

    private static CapNhatDonDatBan_Form currentForm = null;

    private DonDatBan ddb;
    private NhanVienService nhanVien_DAO ;
    private BanService ban_DAO;
    private LoaiBanService loaiBan_DAO ;
    private NhanVien nv = null;
    private static Map<String, ImageIcon> imageCache = new HashMap<>();

    /**
     * Creates new form ItemDonDatBan
     */
    public ItemDonDatBan(DonDatBan ddb, NhanVien nv) throws Exception {
               this.nhanVien_DAO = RMIClientManager.getInstance().getNhanVienService();
               this.ban_DAO=RMIClientManager.getInstance().getBanService();
               this.loaiBan_DAO=RMIClientManager.getInstance().getLoaiBanService();
        initComponents();
        this.ddb = ddb;
        this.nv = nv;
        loadDDB();
    }

    public void loadDDB() throws RemoteException {
        SwingUtilities.invokeLater(() -> {
            imgLoad("/hinhAnh/table.png");
        });

        NhanVien nv = nhanVien_DAO.findById(ddb.getNhanVien().getMaNV());
        Ban ban = ban_DAO.findById(ddb.getBan().getMaBan());
        LoaiBan lb = loaiBan_DAO.findById(ban.getLoaiBan().getMaLoaiBan());

        khachHangLb.setText(ddb.getKhachHang().getTenKH() + " - " + ddb.getKhachHang().getSdt());
        txtDate.setText(ddb.getGioDat().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
        txtTime.setText(ddb.getGioDat().format(DateTimeFormatter.ofPattern("HH:mm:ss")));
        txtTienCoc.setText(currencyFormat(ddb.getTienCoc()));
        txtTenNV.setText(nv.getTenNV());
        txtBan.setText("Bàn " + ban.getMaBan() + " / " + lb.getTenLoaiBan());
    }

    public String currencyFormat(double price) {
        Locale locale = new Locale("vi", "VN");
        NumberFormat formatter = NumberFormat.getCurrencyInstance(locale);
        return formatter.format(price);
    }

    public void imgLoad(String path) {
        // nếu bộ đệm đã có hình rồi thì load luôn
        if (imageCache.containsKey(path)) {
            imgTable.setIcon(imageCache.get(path));
        } // còn nếu chưa có thì dùng SwingWorker để load ảnh đồng thời lưu luôn ảnh đó vào cache :33
        else {
            new SwingWorker<ImageIcon, Void>() {
                @Override
                protected ImageIcon doInBackground() throws Exception {
                    InputStream input = getClass().getResourceAsStream(path);
                    BufferedImage bufImg = ImageIO.read(input);
                    Image scaledImg = bufImg.getScaledInstance(imgTable.getWidth(), imgTable.getHeight(), Image.SCALE_SMOOTH);
                    return new ImageIcon(scaledImg);
                }

                @Override
                protected void done() {
                    try {
                        ImageIcon icon = get();
                        imageCache.put(path, icon);
                        imgTable.setIcon(icon);
                        imgTable.revalidate();
                        imgTable.repaint();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }.execute();
        }
    }

    public void showCapNhatDDB() {
        if (currentForm == null || !currentForm.isVisible()) {
            // Kiểm tra nếu chưa có form hoặc form hiện tại đã đóng
            currentForm = new CapNhatDonDatBan_Form(ddb, nv);
            currentForm.setVisible(true);

            // Reset trạng thái khi form bị đóng
            currentForm.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosed(java.awt.event.WindowEvent e) {
                    currentForm = null; // Reset khi form đóng

                }
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        khachHangLb = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtDate = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTime = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTienCoc = new javax.swing.JLabel();
        imgTable = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JLabel();
        txtBan = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        khachHangLb.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        khachHangLb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        khachHangLb.setText("Khách Hàng - SĐT");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(khachHangLb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(khachHangLb, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel3.setText("Ngày hẹn:");

        txtDate.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtDate.setText("...");

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel5.setText("Giờ hẹn:");

        txtTime.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtTime.setText("...");

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel7.setText("Tiền cọc:");

        txtTienCoc.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtTienCoc.setText("...");

        imgTable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imgTable.setToolTipText("img");
        imgTable.setPreferredSize(new java.awt.Dimension(165, 140));
        imgTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imgTableMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel9.setText("NV tạo:");

        txtTenNV.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtTenNV.setText("...");

        txtBan.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtBan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtBan.setText("Bàn");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(imgTable, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtBan, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTienCoc, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(txtTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(imgTable, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBan))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDate))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtTime))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtTienCoc))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtTenNV))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void imgTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imgTableMouseClicked
        showCapNhatDDB();
    }//GEN-LAST:event_imgTableMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        showCapNhatDDB();
    }//GEN-LAST:event_formMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imgTable;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel khachHangLb;
    private javax.swing.JLabel txtBan;
    private javax.swing.JLabel txtDate;
    private javax.swing.JLabel txtTenNV;
    private javax.swing.JLabel txtTienCoc;
    private javax.swing.JLabel txtTime;
    // End of variables declaration//GEN-END:variables
}
